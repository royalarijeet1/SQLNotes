

SQL> REM SQL : STRUCTURED QUERY LANGUAGE
SQL> 
SQL> REM SQL HAS 5 SUB LANGUAGES
SQL> 
SQL> REM 1 DQL/DRL 2 DML 3 TCL 4 DDL 5 DCL
SQL> 
SQL> REM DQL/DRL : DATA QUERY/RETRIEVAL LANGUAGE : SELECT
SQL> 
SQL> REM DML : DATA MANIPULATION LANGUAGE : INSERT UPDATE DELETE      MERGE
SQL> 
SQL> REM TCL : TRANSACTION CONTROL LANGUAGE : COMMIT ROLLBACK SAVEPOINT
SQL> 
SQL> REM DDL : DATA DEFINITION LANGUAGE : CREATE ALTER DROP TRUNCATE RENAME COMMENT PURGE FLASHBACK
SQL> 
SQL> REM DCL : DATA (ACCESS) CONTROL LANGUAGE : GRANT REVOKE
SQL> 
SQL> 
SQL> 
SQL> REM CHAPTER 9 : DML + TCL + TRUNCATE PURGE FLASHBACK + READ CONSISTANCY , CONCURRENCY , LOCKING , DEAD LOCK
SQL> 
SQL> REM DML : INSERT UPDATE DELETE
SQL> 
SQL> REM INSERT : TO ADD NEW ROW(S) TO EXISTING TABLE
SQL> 
SQL> REM UPDATE : TO MODIFY/EDIT/CHANGE/UPDATE EXISTING ROW VALUES
SQL> 
SQL> REM DELETE : TO DELETE/REMOVE ROWS FROM TABLE
SQL> 
SQL> 
SQL> 
SQL> REM ANY CHANGES DONE USING DML STATEMENTS ARE LIMITED TO RAM/MEMORY.
SQL> 
SQL> REM TCL : TRNSACTION CONTROL LANGUAGE
SQL> 
SQL> 
SQL> REM SESSION : TIME PERIOD BETWEEN LOG IN AND LOG OUT.
SQL> 
SQL> REM TRANSACTION STARTS WITH FIRST DML STATEMENT.
SQL> 
SQL> REM TRANSACTION ENDS WITH EITHER COMMIT/ROLLBACK COMMAND.
SQL> 
SQL> REM COMMIT : TO SAVE ALL THE CHANGES DONE INSIDE CURRENT TRASACTION.L
SQL> 
SQL> REM ROLLBACK : TO UNDO ALL THE CHANGES DONE INSIDE CURRENT TRASACTION.
SQL> 
SQL> 
SQL> 
SQL> REM TABLE HAS 4 ROWS :
SQL> 
SQL> REM INSERT (TRANSACATION STARTS HERE)
SQL> 
SQL> REM TABLE HAS 4 ROWS + MEMORY/RAM HAS 1 ROW
SQL> 
SQL> REM INSERT
SQL> 
SQL> REM TABLE HAS 4 ROWS + MEMORY/RAM HAS 2 ROW
SQL> 
SQL> REM ROLLBACK;
SQL> 
SQL> REM TABLE HAS 4 ROWS + MEMORY/RAM HAS 0 ROW
SQL> 
SQL> 
SQL> 
SQL> REM TABLE HAS 4 ROWS :
SQL> 
SQL> REM INSERT (TRANSACATION STARTS HERE)
SQL> 
SQL> REM TABLE HAS 4 ROWS + MEMORY/RAM HAS 1 ROW
SQL> 
SQL> REM INSERT
SQL> 
SQL> REM TABLE HAS 4 ROWS + MEMORY/RAM HAS 2 ROW
SQL> 
SQL> REM COMMIT;
SQL> 
SQL> REM TABLE HAS 6 ROWS + MEMORY/RAM HAS 0 ROW
SQL> 
SQL> 
SQL> 
SQL> 
SQL> REM TABLE HAS 4 ROWS :
SQL> 
SQL> REM INSERT (TRANSACATION STARTS HERE)
SQL> 
SQL> REM SAVEPOINT A
SQL> 
SQL> REM INSERT
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL>        REM TABLE HAS 4 ROWS :
SQL> 
SQL> REM INSERT (TRANSACATION STARTS HERE)
SQL> 
SQL> 
SQL> REM TABLE : 4 , MEMORY : 1
SQL> 
SQL> REM SAVEPOINT A;
SQL> 
SQL> REM INSERT
SQL> 
SQL> REM TABLE : 4 , MEMORY : 2
SQL> 
SQL> REM SAVEPOINT B;
SQL> 
SQL> REM INSERT
SQL> 
SQL> REM TABLE : 4 , MEMORY : 3
SQL> 
SQL> 
SQL> REM 1 COMMIT : TABLE : 7 , MEMORY 0 : BOTH SAVEPOINTS WILL BE REMOVED
SQL> 
SQL> REM 2 ROLLBACK : TABLE : 4 , MEMORY 0 : BOTH SAVEPOINTS WILL BE REMOVED
SQL> 
SQL> REM 3 ROLLBACK TO B : TABLE : 4 , MEMORY 2
SQL> 
SQL> REM 4 ROLLBACK TO A : TABLE : 4 , MEMORY 1
SQL> 
SQL> REM SAVEPOINT B WILL BE REMOVES IN ABOVE 4TH STEP
SQL> 
SQL> REM 5 COMMIT; : TABLE : 5 , MEMORY 0 : SAVEPOINT A WILL BE REMOVED
SQL> 

